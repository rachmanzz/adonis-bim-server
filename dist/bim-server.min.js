const Query=require("./query.min"),{fReturn:fReturn,iString:iString}=require("bimn");class BimServer extends Query{constructor(e){this.loadModal(e)}bimRequest(e){const t=e.get(),i=fReturn(t,["where","orwhere","like","orlike","with","between","groupby","offset","limit","orderby"]);for(let e in i)this[e](i);if(iString(t.paginate)){if(/^[0-9]+$/.test(t.paginate))this.modal.paginate(parseInt(t.paginate));else if(/^[0-9]+\|[0-9]+$/.test(t.paginate)){const e=t.paginate.match(/(^[0-9]+)\|([0-9]+)$/);let i=parseInt(e[1]),r=parseInt(e[2]);this.modal.paginate(r,i)}}else iString(t.first)&&"true"===t.first?this.modal.first():this.modal.fetch()}}module.exports=BimServer;
